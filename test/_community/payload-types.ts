/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    posts: Post;
    simple: Simple;
    media: Media;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsSelect?: {
    posts: PostsSelect;
    simple: SimpleSelect;
    media: MediaSelect;
    users: UsersSelect;
    'payload-locked-documents': PayloadLockedDocumentsSelect;
    'payload-preferences': PayloadPreferencesSelect;
    'payload-migrations': PayloadMigrationsSelect;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    menu: Menu;
    'custom-ts': CustomT;
  };
  globalsSelect?: {
    menu: MenuSelect;
    'custom-ts': CustomTsSelect;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  text?: string | null;
  serverTextField?: string | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  myBlocks?:
    | (
        | {
            test?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'test';
          }
        | {
            test2?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'someBlock2';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "simple".
 */
export interface Simple {
  id: string;
  text?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'simple';
        value: string | Simple;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect {
  id?: boolean;
  text?: boolean;
  serverTextField?: boolean;
  richText?: boolean;
  myBlocks?:
    | boolean
    | {
        test?:
          | boolean
          | {
              id?: boolean;
              test?: boolean;
              blockName?: boolean;
            };
        someBlock2?:
          | boolean
          | {
              id?: boolean;
              test2?: boolean;
              blockName?: boolean;
            };
      };
  updatedAt?: boolean;
  createdAt?: boolean;
  _status?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "simple_select".
 */
export interface SimpleSelect {
  id?: boolean;
  text?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect {
  id?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
  url?: boolean;
  thumbnailURL?: boolean;
  filename?: boolean;
  mimeType?: boolean;
  filesize?: boolean;
  width?: boolean;
  height?: boolean;
  focalX?: boolean;
  focalY?: boolean;
  sizes?:
    | boolean
    | {
        id?: boolean;
        thumbnail?:
          | boolean
          | {
              id?: boolean;
              url?: boolean;
              width?: boolean;
              height?: boolean;
              mimeType?: boolean;
              filesize?: boolean;
              filename?: boolean;
            };
        medium?:
          | boolean
          | {
              id?: boolean;
              url?: boolean;
              width?: boolean;
              height?: boolean;
              mimeType?: boolean;
              filesize?: boolean;
              filename?: boolean;
            };
        large?:
          | boolean
          | {
              id?: boolean;
              url?: boolean;
              width?: boolean;
              height?: boolean;
              mimeType?: boolean;
              filesize?: boolean;
              filename?: boolean;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect {
  id?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
  email?: boolean;
  resetPasswordToken?: boolean;
  resetPasswordExpiration?: boolean;
  salt?: boolean;
  hash?: boolean;
  loginAttempts?: boolean;
  lockUntil?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect {
  id?: boolean;
  document?: boolean;
  globalSlug?: boolean;
  user?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect {
  id?: boolean;
  user?: boolean;
  key?: boolean;
  value?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect {
  id?: boolean;
  name?: boolean;
  batch?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu".
 */
export interface Menu {
  id: string;
  globalText?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-ts".
 */
export interface CustomT {
  id: string;
  custom?: 'hello' | 'world';
  withDefinitionsUsage?: ObjectWithNumber[];
  json: {
    id: string;
    name: string;
    age?: number;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "objectWithNumber".
 */
export interface ObjectWithNumber {
  id?: number;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu_select".
 */
export interface MenuSelect {
  id?: boolean;
  globalText?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-ts_select".
 */
export interface CustomTsSelect {
  id?: boolean;
  custom?: boolean;
  withDefinitionsUsage?: boolean;
  json?: boolean;
  updatedAt?: boolean;
  createdAt?: boolean;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  // @ts-ignore 
  export interface GeneratedTypes extends Config {}
}